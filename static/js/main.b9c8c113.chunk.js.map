{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","utils/fetchImage.js","App.js","utils/scroll.js","index.js"],"names":["ImageGalleryItem","webImage","onSelect","largeUrl","className","onClick","src","alt","ImageGallery","images","selectImg","map","item","webformatURL","largeImageURL","id","Searchbar","onSubmit","useState","name","setName","e","preventDefault","type","value","autoComplete","autoFocus","placeholder","onChange","target","Button","styled","button","LoadMoreButton","Wrapper","div","Spinner","color","height","width","Overlay","ContentModal","modalRoot","document","querySelector","Modal","children","onClose","useEffect","window","addEventListener","code","console","log","createPortal","currentTarget","nameImg","pageNumber","a","fetch","then","response","ok","json","Promise","reject","Error","Api","fetchImages","App","queryName","setQueryName","setImages","page","setPage","loading","setLoading","selectImage","setSelectImage","res","prevState","hits","scrollTo","top","documentElement","scrollHeight","behavior","finally","url","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b9c8c113.chunk.js","sourcesContent":["function ImageGalleryItem({ webImage, onSelect, largeUrl }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={() => onSelect(largeUrl)}>\r\n      <img src={webImage} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\n\r\nfunction ImageGallery({ images, selectImg }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(item => (\r\n        <ImageGalleryItem\r\n          key={item.id}\r\n          webImage={item.webformatURL}\r\n          largeUrl={item.largeImageURL}\r\n          onSelect={selectImg}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n","import { useState } from 'react';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const value = e.target.value;\r\n    setName(value);\r\n  };\r\n\r\n  const handleSubmitForm = e => {\r\n    e.preventDefault();\r\n    if (name !== '') {\r\n      onSubmit(name);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={handleSubmitForm} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={name}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  margin: 20px auto 20px auto;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\r\n    0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import { Button } from './Button.styled';\r\n\r\nfunction LoadMoreButton({ onClick }) {\r\n  return (\r\n    <>\r\n      <Button onClick={onClick}>Load More</Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoadMoreButton;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 96vh;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import Loader from 'react-loader-spinner';\r\nimport { Wrapper } from './Loader.styled';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <Wrapper>\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(4 4 4 / 59%);\r\n  z-index: 10;\r\n\r\n  opacity: 1;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\r\n    visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n`;\r\n\r\nexport const ContentModal = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  max-width: 1200px;\r\n  max-height: 100vh;\r\n  width: 100%;\r\n  /* padding: 40px; */\r\n  background-color: #ffffff;\r\n  /* overflow-y: auto; */\r\n\r\n  transform: translate(-50%, -50%) scale(1);\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n`;\r\n","import { useEffect } from 'react';\r\nimport { Overlay, ContentModal } from './Modal.styled';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ children, onClose }) {\r\n  // componentDidMount() {\r\n  //   window.addEventListener('keydown', this.handleKeyDown);\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   window.removeEventListener('keydown', this.handleKeyDown);\r\n  // }\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    console.log('useModal');\r\n  }, [onClose]);\r\n\r\n  const handleBackDropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      <Overlay onClick={handleBackDropClick}>\r\n        <ContentModal>{children}</ContentModal>\r\n      </Overlay>\r\n    </>,\r\n    modalRoot,\r\n  );\r\n}\r\n","async function fetchImages(nameImg, pageNumber) {\n  const URL = 'https://pixabay.com/api';\n  const KEY = '22579303-973b9b71134c76d3c38c0933d';\n\n  return await fetch(\n    `${URL}/?q=${nameImg}&page=${pageNumber}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Мы не нашли такой картинки по имени ${nameImg}`));\n  });\n}\n\nconst Api = {\n  fetchImages,\n};\n\nexport default Api;\n","import { useState, useEffect } from 'react';\r\n// Components\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport LoadMoreButton from './components/Button/Button';\r\nimport Spinner from './components/Loader/Loader';\r\nimport Modal from './components/Modal/Modal';\r\n// utils\r\nimport Api from './utils/fetchImage';\r\nimport { scroll } from './utils/scroll';\r\n\r\nexport default function App() {\r\n  const [queryName, setQueryName] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectImage, setSelectImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (queryName === '') return;\r\n    setLoading(true);\r\n    Api.fetchImages(queryName, page)\r\n      .then(res => setImages(prevState => [...prevState, ...res.hits]))\r\n      .then(() => {\r\n        if (page > 1) {\r\n          scroll();\r\n        }\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [page, queryName]);\r\n\r\n  function getQueryValue(name) {\r\n    setImages([]);\r\n    setPage(1);\r\n    setQueryName(name);\r\n  }\r\n\r\n  const clickMoreBtn = () => {\r\n    setPage(prevState => prevState + 1);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectImage(null);\r\n  };\r\n\r\n  const handleSelectImg = url => {\r\n    setSelectImage(url);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={getQueryValue}></Searchbar>\r\n\r\n      {loading && <Spinner />}\r\n\r\n      <ImageGallery images={images} selectImg={handleSelectImg} />\r\n\r\n      {images.length > 0 && !loading && <LoadMoreButton onClick={clickMoreBtn} />}\r\n\r\n      {selectImage && (\r\n        <Modal onClose={closeModal}>\r\n          <img src={selectImage} alt={queryName} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","export function scroll() {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}